% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ivreg_marg.R
\name{marg.ivreg}
\alias{marg.ivreg}
\title{Predicted Margins for `ivreg` objects from the \code{AER} package}
\usage{
\method{marg}{ivreg}(mod, var_interest, data, weights = mod$weights, ...)
}
\arguments{
\item{mod}{model object, currently only support those of class \code{\link[stats]{glm}}
or \code{\link[AER]{ivreg}}}

\item{var_interest}{name of the variable of interest, must correspond to a
covariate in the model}

\item{data}{data.frame that margins should run over, defaults changes based
on class-specific method}

\item{weights}{numeric, vector of weights used to generate predicted levels,
defaults changes based on class-specific method. Must be equal to the number
of rows in \code{data}.}

\item{...}{additional parameters passed to \code{?marg}.}
}
\description{
Obtains predicted margins and standard errors
of those predictions from a fitted \code{ivreg} model object.
}
\examples{
data(margex)
margex$assign <- margex$treatment

# Probability of getting treatment increases with age
margex$pr_treat <- plogis(
 scale(margex$age) + scale(margex$distance))

# One-way non-compliance
margex$actual <- margex$assign
margex$actual[margex$assign == 1] <- rbinom(
  n = sum(margex$assign == 1), size = 1,
  prob = margex$pr_treat[margex$assign == 1]
)

table(margex$assign, margex$actual)

# Fit the model
mod <- AER::ivreg(
  y ~ as.factor(actual) + age + distance |
    as.factor(assign) + age + distance,
  data = margex)

# Get margins for different levels of "actual" treatment
modmarg::marg(mod, data = margex, var_interest = 'actual')

# TODO: weights, clustering

}
