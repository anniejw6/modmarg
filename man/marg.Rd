% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/marg.R
\name{marg}
\alias{marg}
\title{Estimating predictive margins on a model}
\usage{
marg(mod, var_interest, type = "levels", vcov_mat = NULL, dof = NULL,
  at = NULL, base_rn = 1, at_var_interest = NULL, data = mod$data,
  cofint = 0.95)
}
\arguments{
\item{mod}{model object, currently only support those of class glm}

\item{var_interest}{name of the variable of interest, must correspond to a
covariate in the model}

\item{type}{either \code{'levels'} (predicted outcomes) or \code{'effects'} (dydx),
defaults to \code{'levels'}}

\item{vcov_mat}{the variance-covariance matrix, defaults to \code{NULL} in which
case \code{vcov(model)} is used.}

\item{dof}{integer, the degrees of freedom used for the T statistic in an
OLS model. Defaults to NULL in which case \code{mod$df.residual} is used.}

\item{at}{list, should be in the format of \code{list('var_name' = c(values))},
defaults to \code{NULL}. This calculates the margins of the variable at these
particular variables. If all values are needed, suggested syntax is
\code{at = list('var' = unique(df$var))}.}

\item{base_rn}{numeric, if \code{type == 'effects'}, the base level (taken as the
index of one of the ordered unique values in \code{var_interest}). if
\code{type == 'levels'}, this param is ignored.
if type == 'levels', this param is ignored. Defaults to 1.}

\item{at_var_interest}{vector, if type == 'levels', the values for the
variable of interest at which levels should be calculated.
If \code{NULL}, indicates all levels for a factor variable, defaults to \code{NULL}}

\item{data}{data.frame that margins should run over, defaults to
\code{mod$data}}

\item{cofint}{numeric, confidence interval (must be less than 1), defaults to 0.95}
}
\value{
list of dataframes with predicted margins/effects, se, p-values,
and confidence interval bounds
}
\description{
Estimating predictive margins on a model
}
\details{
The variable for the predictive margin is specified by \code{var_interest}. If
margins are only needed at particular values of \code{var_interest},
\code{at_var_interest} should be used. If margins of \code{var_interest} are
needed at across the levels of a \emph{different} variable in the model,
\code{at} should be used.

If higher-order polynomial terms (e.g. \eqn{y ~ x + x^2}) are added
using the R function \code{\link[stats]{poly}}, the \code{raw = TRUE}
argument should be used to include the basic polynomial terms
instead of orthogonal polynomial terms. If orthogonal polynomials are used,
\code{marg} will fail when the user specifies \code{at} for a small set
of values for the variable in question (e.g. \code{at = list(x = 10)}),
since \code{poly} needs more data to calculate orthogonal polynomials
(e.g. \code{poly(10, 2)} fails, but \code{poly(c(10, 8, 3), 2)} will run).

P values are calculated with T tests for gaussian families, and Z tests
otherwise. If a new variance-covariance matrix is provided (e.g. for
clustering standard errors), the degrees of freedom for the T test / p-value
calculation may need to be specified using dof. To replicate Stata clustering
\code{vce(cluster var_name)}, dof should be set to \eqn{g - 1}, where g is
the number of unique levels of the clustering variable.
}
\examples{
data(mtcars)
mtcars$gear <- as.character(mtcars$gear)
mod <- glm(vs ~ gear + mpg * disp, data = mtcars, family = 'binomial')
marg(mod, var_interest = 'gear',
          type = 'levels', at = list(mpg = c(15, 21), disp = c(140, 180)))

data(margex)
mod <- glm(outcome ~ as.factor(treatment) + distance,
       data = margex, family = 'binomial')
marg(mod, var_interest = 'treatment', type = 'levels', at = NULL)
marg(mod, var_interest = 'treatment', type = 'effects', at = NULL)
marg(mod, var_interest = 'distance', type = 'levels',
          at = NULL, at_var_interest = c(10, 20, 30))

mod <- glm(outcome ~ distance + factor(sex),
           data = margex, family = 'binomial')
marg(mod, var_interest = 'sex', type = 'levels', at = NULL)

# Using a custom variance-covariance matrix for clustered standard errors
# (also requires custom degrees of freedom for T statistic with OLS model)
data(margex)
data(cvcov)
v <- cvcov$ols$clust
d <- cvcov$ols$stata_dof
mod <- glm(outcome ~ treatment + distance,
           data = margex, family = 'binomial')
marg(mod, var_interest = 'treatment', type = 'levels',
          vcov_mat = v, dof = d)
}

